/*      */ import java.util.List;
/*      */ import java.util.Random;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ public class auq
/*      */   extends avc
/*      */ {
/* 1181 */   private static final qx[] a = { new qx(ade.aG, 0, 1, 3, 20), new qx(ade.aF, 0, 2, 7, 20), new qx(ade.bJ, 0, 1, 1, 1), new qx(ade.aL, 0, 1, 1, 1) };
/*      */   
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   private boolean b;
/*      */   
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   public auq() {}
/*      */   
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   public auq(int paramInt1, Random paramRandom, asv paramasv, int paramInt2)
/*      */   {
/* 1201 */     super(paramInt1);
/*      */     
/* 1203 */     this.g = paramInt2;
/* 1204 */     this.d = a(paramRandom);
/* 1205 */     this.f = paramasv;
/* 1206 */     this.b = (paramasv.c() > 6);
/*      */   }
/*      */   
/*      */   protected void a(dh paramdh)
/*      */   {
/* 1211 */     super.a(paramdh);
/* 1212 */     paramdh.a("Tall", this.b);
/*      */   }
/*      */   
/*      */   protected void b(dh paramdh)
/*      */   {
/* 1217 */     super.b(paramdh);
/* 1218 */     this.b = paramdh.n("Tall");
/*      */   }
/*      */   
/*      */ 
/*      */   public static auq a(List paramList, Random paramRandom, int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
/*      */   {
/* 1224 */     asv localasv = asv.a(paramInt1, paramInt2, paramInt3, -4, -1, 0, 14, 11, 15, paramInt4);
/*      */     
/* 1226 */     if ((!a(localasv)) || (avk.a(paramList, localasv) != null))
/*      */     {
/* 1228 */       localasv = asv.a(paramInt1, paramInt2, paramInt3, -4, -1, 0, 14, 6, 15, paramInt4);
/*      */       
/* 1230 */       if ((!a(localasv)) || (avk.a(paramList, localasv) != null)) {
/* 1231 */         return null;
/*      */       }
/*      */     }
/*      */     
/* 1235 */     return new auq(paramInt5, paramRandom, localasv, paramInt4);
/*      */   }
/*      */   
/*      */   public boolean a(ahb paramahb, Random paramRandom, asv paramasv)
/*      */   {
/* 1240 */     if (a(paramahb, paramasv)) {
/* 1241 */       return false;
/*      */     }
/*      */     
/* 1244 */     int i = 11;
/* 1245 */     if (!this.b) {
/* 1246 */       i = 6;
/*      */     }
/*      */     
/*      */ 
/* 1250 */     a(paramahb, paramasv, 0, 0, 0, 13, i - 1, 14, true, paramRandom, aui.c());
/*      */     
/* 1252 */     a(paramahb, paramRandom, paramasv, this.d, 4, 1, 0);
/*      */     
/*      */ 
/* 1255 */     a(paramahb, paramasv, paramRandom, 0.07F, 2, 1, 1, 11, 4, 13, ajn.G, ajn.G, false);
/*      */     
/* 1257 */     int j = 1;
/* 1258 */     int k = 12;
/*      */     
/*      */ 
/* 1261 */     for (int m = 1; m <= 13; m++) {
/* 1262 */       if ((m - 1) % 4 == 0) {
/* 1263 */         a(paramahb, paramasv, 1, 1, m, 1, 4, m, ajn.f, ajn.f, false);
/* 1264 */         a(paramahb, paramasv, 12, 1, m, 12, 4, m, ajn.f, ajn.f, false);
/*      */         
/* 1266 */         a(paramahb, ajn.aa, 0, 2, 3, m, paramasv);
/* 1267 */         a(paramahb, ajn.aa, 0, 11, 3, m, paramasv);
/*      */         
/* 1269 */         if (this.b) {
/* 1270 */           a(paramahb, paramasv, 1, 6, m, 1, 9, m, ajn.f, ajn.f, false);
/* 1271 */           a(paramahb, paramasv, 12, 6, m, 12, 9, m, ajn.f, ajn.f, false);
/*      */         }
/*      */       }
/*      */       else {
/* 1275 */         a(paramahb, paramasv, 1, 1, m, 1, 4, m, ajn.X, ajn.X, false);
/* 1276 */         a(paramahb, paramasv, 12, 1, m, 12, 4, m, ajn.X, ajn.X, false);
/*      */         
/* 1278 */         if (this.b) {
/* 1279 */           a(paramahb, paramasv, 1, 6, m, 1, 9, m, ajn.X, ajn.X, false);
/* 1280 */           a(paramahb, paramasv, 12, 6, m, 12, 9, m, ajn.X, ajn.X, false);
/*      */         }
/*      */       }
/*      */     }
/*      */     
/*      */ 
/* 1286 */     for (m = 3; m < 12; m += 2) {
/* 1287 */       a(paramahb, paramasv, 3, 1, m, 4, 3, m, ajn.X, ajn.X, false);
/* 1288 */       a(paramahb, paramasv, 6, 1, m, 7, 3, m, ajn.X, ajn.X, false);
/* 1289 */       a(paramahb, paramasv, 9, 1, m, 10, 3, m, ajn.X, ajn.X, false);
/*      */     }
/*      */     
/* 1292 */     if (this.b)
/*      */     {
/* 1294 */       a(paramahb, paramasv, 1, 5, 1, 3, 5, 13, ajn.f, ajn.f, false);
/* 1295 */       a(paramahb, paramasv, 10, 5, 1, 12, 5, 13, ajn.f, ajn.f, false);
/* 1296 */       a(paramahb, paramasv, 4, 5, 1, 9, 5, 2, ajn.f, ajn.f, false);
/* 1297 */       a(paramahb, paramasv, 4, 5, 12, 9, 5, 13, ajn.f, ajn.f, false);
/*      */       
/* 1299 */       a(paramahb, ajn.f, 0, 9, 5, 11, paramasv);
/* 1300 */       a(paramahb, ajn.f, 0, 8, 5, 11, paramasv);
/* 1301 */       a(paramahb, ajn.f, 0, 9, 5, 10, paramasv);
/*      */       
/*      */ 
/* 1304 */       a(paramahb, paramasv, 3, 6, 2, 3, 6, 12, ajn.aJ, ajn.aJ, false);
/* 1305 */       a(paramahb, paramasv, 10, 6, 2, 10, 6, 10, ajn.aJ, ajn.aJ, false);
/* 1306 */       a(paramahb, paramasv, 4, 6, 2, 9, 6, 2, ajn.aJ, ajn.aJ, false);
/* 1307 */       a(paramahb, paramasv, 4, 6, 12, 8, 6, 12, ajn.aJ, ajn.aJ, false);
/* 1308 */       a(paramahb, ajn.aJ, 0, 9, 6, 11, paramasv);
/* 1309 */       a(paramahb, ajn.aJ, 0, 8, 6, 11, paramasv);
/* 1310 */       a(paramahb, ajn.aJ, 0, 9, 6, 10, paramasv);
/*      */       
/*      */ 
/* 1313 */       m = a(ajn.ap, 3);
/* 1314 */       a(paramahb, ajn.ap, m, 10, 1, 13, paramasv);
/* 1315 */       a(paramahb, ajn.ap, m, 10, 2, 13, paramasv);
/* 1316 */       a(paramahb, ajn.ap, m, 10, 3, 13, paramasv);
/* 1317 */       a(paramahb, ajn.ap, m, 10, 4, 13, paramasv);
/* 1318 */       a(paramahb, ajn.ap, m, 10, 5, 13, paramasv);
/* 1319 */       a(paramahb, ajn.ap, m, 10, 6, 13, paramasv);
/* 1320 */       a(paramahb, ajn.ap, m, 10, 7, 13, paramasv);
/*      */       
/*      */ 
/* 1323 */       int n = 7;
/* 1324 */       int i1 = 7;
/* 1325 */       a(paramahb, ajn.aJ, 0, n - 1, 9, i1, paramasv);
/* 1326 */       a(paramahb, ajn.aJ, 0, n, 9, i1, paramasv);
/* 1327 */       a(paramahb, ajn.aJ, 0, n - 1, 8, i1, paramasv);
/* 1328 */       a(paramahb, ajn.aJ, 0, n, 8, i1, paramasv);
/* 1329 */       a(paramahb, ajn.aJ, 0, n - 1, 7, i1, paramasv);
/* 1330 */       a(paramahb, ajn.aJ, 0, n, 7, i1, paramasv);
/*      */       
/* 1332 */       a(paramahb, ajn.aJ, 0, n - 2, 7, i1, paramasv);
/* 1333 */       a(paramahb, ajn.aJ, 0, n + 1, 7, i1, paramasv);
/* 1334 */       a(paramahb, ajn.aJ, 0, n - 1, 7, i1 - 1, paramasv);
/* 1335 */       a(paramahb, ajn.aJ, 0, n - 1, 7, i1 + 1, paramasv);
/* 1336 */       a(paramahb, ajn.aJ, 0, n, 7, i1 - 1, paramasv);
/* 1337 */       a(paramahb, ajn.aJ, 0, n, 7, i1 + 1, paramasv);
/*      */       
/* 1339 */       a(paramahb, ajn.aa, 0, n - 2, 8, i1, paramasv);
/* 1340 */       a(paramahb, ajn.aa, 0, n + 1, 8, i1, paramasv);
/* 1341 */       a(paramahb, ajn.aa, 0, n - 1, 8, i1 - 1, paramasv);
/* 1342 */       a(paramahb, ajn.aa, 0, n - 1, 8, i1 + 1, paramasv);
/* 1343 */       a(paramahb, ajn.aa, 0, n, 8, i1 - 1, paramasv);
/* 1344 */       a(paramahb, ajn.aa, 0, n, 8, i1 + 1, paramasv);
/*      */     }
/*      */     
/*      */ 
/* 1348 */     a(paramahb, paramasv, paramRandom, 3, 3, 5, qx.a(a, new qx[] { ade.bR.a(paramRandom, 1, 5, 2) }), 1 + paramRandom.nextInt(4));
/* 1349 */     if (this.b) {
/* 1350 */       a(paramahb, ajn.a, 0, 12, 9, 1, paramasv);
/* 1351 */       a(paramahb, paramasv, paramRandom, 12, 8, 1, qx.a(a, new qx[] { ade.bR.a(paramRandom, 1, 5, 2) }), 1 + paramRandom.nextInt(4));
/*      */     }
/*      */     
/*      */ 
/* 1355 */     return true;
/*      */   }
/*      */ }


/* Location:              C:\Users\trent\.gradle\caches\minecraft\net\minecraft\minecraft\1.7.10\minecraft-1.7.10.jar!\auq.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */