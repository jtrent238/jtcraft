/*      */ import java.util.List;
/*      */ import java.util.Random;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ public class atq
/*      */   extends ats
/*      */ {
/*      */   public atq() {}
/*      */   
/*      */   public atq(int paramInt1, Random paramRandom, asv paramasv, int paramInt2)
/*      */   {
/*  999 */     super(paramInt1);
/*      */     
/* 1001 */     this.g = paramInt2;
/* 1002 */     this.f = paramasv;
/*      */   }
/*      */   
/*      */ 
/*      */ 
/*      */   public void a(avk paramavk, List paramList, Random paramRandom)
/*      */   {
/* 1009 */     a((atw)paramavk, paramList, paramRandom, 5, 3, true);
/* 1010 */     a((atw)paramavk, paramList, paramRandom, 5, 11, true);
/*      */   }
/*      */   
/*      */ 
/*      */   public static atq a(List paramList, Random paramRandom, int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
/*      */   {
/* 1016 */     asv localasv = asv.a(paramInt1, paramInt2, paramInt3, -5, -3, 0, 13, 14, 13, paramInt4);
/*      */     
/* 1018 */     if ((!a(localasv)) || (avk.a(paramList, localasv) != null)) {
/* 1019 */       return null;
/*      */     }
/*      */     
/* 1022 */     return new atq(paramInt5, paramRandom, localasv, paramInt4);
/*      */   }
/*      */   
/*      */ 
/*      */ 
/*      */   public boolean a(ahb paramahb, Random paramRandom, asv paramasv)
/*      */   {
/* 1029 */     a(paramahb, paramasv, 0, 3, 0, 12, 4, 12, ajn.bj, ajn.bj, false);
/*      */     
/* 1031 */     a(paramahb, paramasv, 0, 5, 0, 12, 13, 12, ajn.a, ajn.a, false);
/*      */     
/*      */ 
/* 1034 */     a(paramahb, paramasv, 0, 5, 0, 1, 12, 12, ajn.bj, ajn.bj, false);
/* 1035 */     a(paramahb, paramasv, 11, 5, 0, 12, 12, 12, ajn.bj, ajn.bj, false);
/* 1036 */     a(paramahb, paramasv, 2, 5, 11, 4, 12, 12, ajn.bj, ajn.bj, false);
/* 1037 */     a(paramahb, paramasv, 8, 5, 11, 10, 12, 12, ajn.bj, ajn.bj, false);
/* 1038 */     a(paramahb, paramasv, 5, 9, 11, 7, 12, 12, ajn.bj, ajn.bj, false);
/* 1039 */     a(paramahb, paramasv, 2, 5, 0, 4, 12, 1, ajn.bj, ajn.bj, false);
/* 1040 */     a(paramahb, paramasv, 8, 5, 0, 10, 12, 1, ajn.bj, ajn.bj, false);
/* 1041 */     a(paramahb, paramasv, 5, 9, 0, 7, 12, 1, ajn.bj, ajn.bj, false);
/*      */     
/*      */ 
/* 1044 */     a(paramahb, paramasv, 2, 11, 2, 10, 12, 10, ajn.bj, ajn.bj, false);
/*      */     
/*      */ 
/* 1047 */     for (int i = 1; i <= 11; i += 2) {
/* 1048 */       a(paramahb, paramasv, i, 10, 0, i, 11, 0, ajn.bk, ajn.bk, false);
/* 1049 */       a(paramahb, paramasv, i, 10, 12, i, 11, 12, ajn.bk, ajn.bk, false);
/* 1050 */       a(paramahb, paramasv, 0, 10, i, 0, 11, i, ajn.bk, ajn.bk, false);
/* 1051 */       a(paramahb, paramasv, 12, 10, i, 12, 11, i, ajn.bk, ajn.bk, false);
/* 1052 */       a(paramahb, ajn.bj, 0, i, 13, 0, paramasv);
/* 1053 */       a(paramahb, ajn.bj, 0, i, 13, 12, paramasv);
/* 1054 */       a(paramahb, ajn.bj, 0, 0, 13, i, paramasv);
/* 1055 */       a(paramahb, ajn.bj, 0, 12, 13, i, paramasv);
/* 1056 */       a(paramahb, ajn.bk, 0, i + 1, 13, 0, paramasv);
/* 1057 */       a(paramahb, ajn.bk, 0, i + 1, 13, 12, paramasv);
/* 1058 */       a(paramahb, ajn.bk, 0, 0, 13, i + 1, paramasv);
/* 1059 */       a(paramahb, ajn.bk, 0, 12, 13, i + 1, paramasv);
/*      */     }
/* 1061 */     a(paramahb, ajn.bk, 0, 0, 13, 0, paramasv);
/* 1062 */     a(paramahb, ajn.bk, 0, 0, 13, 12, paramasv);
/* 1063 */     a(paramahb, ajn.bk, 0, 0, 13, 0, paramasv);
/* 1064 */     a(paramahb, ajn.bk, 0, 12, 13, 0, paramasv);
/*      */     
/*      */ 
/* 1067 */     for (i = 3; i <= 9; i += 2) {
/* 1068 */       a(paramahb, paramasv, 1, 7, i, 1, 8, i, ajn.bk, ajn.bk, false);
/* 1069 */       a(paramahb, paramasv, 11, 7, i, 11, 8, i, ajn.bk, ajn.bk, false);
/*      */     }
/*      */     
/*      */ 
/* 1073 */     i = a(ajn.bl, 3);
/* 1074 */     for (int j = 0; j <= 6; j++) {
/* 1075 */       k = j + 4;
/* 1076 */       for (m = 5; m <= 7; m++) {
/* 1077 */         a(paramahb, ajn.bl, i, m, 5 + j, k, paramasv);
/*      */       }
/* 1079 */       if ((k >= 5) && (k <= 8)) {
/* 1080 */         a(paramahb, paramasv, 5, 5, k, 7, j + 4, k, ajn.bj, ajn.bj, false);
/* 1081 */       } else if ((k >= 9) && (k <= 10)) {
/* 1082 */         a(paramahb, paramasv, 5, 8, k, 7, j + 4, k, ajn.bj, ajn.bj, false);
/*      */       }
/* 1084 */       if (j >= 1) {
/* 1085 */         a(paramahb, paramasv, 5, 6 + j, k, 7, 9 + j, k, ajn.a, ajn.a, false);
/*      */       }
/*      */     }
/* 1088 */     for (j = 5; j <= 7; j++) {
/* 1089 */       a(paramahb, ajn.bl, i, j, 12, 11, paramasv);
/*      */     }
/* 1091 */     a(paramahb, paramasv, 5, 6, 7, 5, 7, 7, ajn.bk, ajn.bk, false);
/* 1092 */     a(paramahb, paramasv, 7, 6, 7, 7, 7, 7, ajn.bk, ajn.bk, false);
/* 1093 */     a(paramahb, paramasv, 5, 13, 12, 7, 13, 12, ajn.a, ajn.a, false);
/*      */     
/*      */ 
/* 1096 */     a(paramahb, paramasv, 2, 5, 2, 3, 5, 3, ajn.bj, ajn.bj, false);
/* 1097 */     a(paramahb, paramasv, 2, 5, 9, 3, 5, 10, ajn.bj, ajn.bj, false);
/* 1098 */     a(paramahb, paramasv, 2, 5, 4, 2, 5, 8, ajn.bj, ajn.bj, false);
/* 1099 */     a(paramahb, paramasv, 9, 5, 2, 10, 5, 3, ajn.bj, ajn.bj, false);
/* 1100 */     a(paramahb, paramasv, 9, 5, 9, 10, 5, 10, ajn.bj, ajn.bj, false);
/* 1101 */     a(paramahb, paramasv, 10, 5, 4, 10, 5, 8, ajn.bj, ajn.bj, false);
/* 1102 */     j = a(ajn.bl, 0);
/* 1103 */     int k = a(ajn.bl, 1);
/* 1104 */     a(paramahb, ajn.bl, k, 4, 5, 2, paramasv);
/* 1105 */     a(paramahb, ajn.bl, k, 4, 5, 3, paramasv);
/* 1106 */     a(paramahb, ajn.bl, k, 4, 5, 9, paramasv);
/* 1107 */     a(paramahb, ajn.bl, k, 4, 5, 10, paramasv);
/* 1108 */     a(paramahb, ajn.bl, j, 8, 5, 2, paramasv);
/* 1109 */     a(paramahb, ajn.bl, j, 8, 5, 3, paramasv);
/* 1110 */     a(paramahb, ajn.bl, j, 8, 5, 9, paramasv);
/* 1111 */     a(paramahb, ajn.bl, j, 8, 5, 10, paramasv);
/*      */     
/*      */ 
/* 1114 */     a(paramahb, paramasv, 3, 4, 4, 4, 4, 8, ajn.aM, ajn.aM, false);
/* 1115 */     a(paramahb, paramasv, 8, 4, 4, 9, 4, 8, ajn.aM, ajn.aM, false);
/* 1116 */     a(paramahb, paramasv, 3, 5, 4, 4, 5, 8, ajn.bm, ajn.bm, false);
/* 1117 */     a(paramahb, paramasv, 8, 5, 4, 9, 5, 8, ajn.bm, ajn.bm, false);
/*      */     
/*      */ 
/* 1120 */     a(paramahb, paramasv, 4, 2, 0, 8, 2, 12, ajn.bj, ajn.bj, false);
/* 1121 */     a(paramahb, paramasv, 0, 2, 4, 12, 2, 8, ajn.bj, ajn.bj, false);
/*      */     
/* 1123 */     a(paramahb, paramasv, 4, 0, 0, 8, 1, 3, ajn.bj, ajn.bj, false);
/* 1124 */     a(paramahb, paramasv, 4, 0, 9, 8, 1, 12, ajn.bj, ajn.bj, false);
/* 1125 */     a(paramahb, paramasv, 0, 0, 4, 3, 1, 8, ajn.bj, ajn.bj, false);
/* 1126 */     a(paramahb, paramasv, 9, 0, 4, 12, 1, 8, ajn.bj, ajn.bj, false);
/*      */     int n;
/* 1128 */     for (int m = 4; m <= 8; m++) {
/* 1129 */       for (n = 0; n <= 2; n++) {
/* 1130 */         b(paramahb, ajn.bj, 0, m, -1, n, paramasv);
/* 1131 */         b(paramahb, ajn.bj, 0, m, -1, 12 - n, paramasv);
/*      */       }
/*      */     }
/* 1134 */     for (m = 0; m <= 2; m++) {
/* 1135 */       for (n = 4; n <= 8; n++) {
/* 1136 */         b(paramahb, ajn.bj, 0, m, -1, n, paramasv);
/* 1137 */         b(paramahb, ajn.bj, 0, 12 - m, -1, n, paramasv);
/*      */       }
/*      */     }
/*      */     
/* 1141 */     return true;
/*      */   }
/*      */ }


/* Location:              C:\Users\trent\.gradle\caches\minecraft\net\minecraft\minecraft\1.7.10\minecraft-1.7.10.jar!\atq.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */