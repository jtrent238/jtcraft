/*      */ import java.util.List;
/*      */ import java.util.Random;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ public class auv
/*      */   extends avc
/*      */ {
/*  948 */   private static final qx[] b = { new qx(ade.j, 0, 1, 5, 10), new qx(ade.k, 0, 1, 3, 5), new qx(ade.ax, 0, 4, 9, 5), new qx(ade.h, 0, 3, 8, 10), new qx(ade.P, 0, 1, 3, 15), new qx(ade.e, 0, 1, 3, 15), new qx(ade.b, 0, 1, 1, 1) };
/*      */   
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   protected int a;
/*      */   
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   public auv() {}
/*      */   
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   public auv(int paramInt1, Random paramRandom, asv paramasv, int paramInt2)
/*      */   {
/*  970 */     super(paramInt1);
/*      */     
/*  972 */     this.g = paramInt2;
/*  973 */     this.d = a(paramRandom);
/*  974 */     this.f = paramasv;
/*  975 */     this.a = paramRandom.nextInt(5);
/*      */   }
/*      */   
/*      */   protected void a(dh paramdh)
/*      */   {
/*  980 */     super.a(paramdh);
/*  981 */     paramdh.a("Type", this.a);
/*      */   }
/*      */   
/*      */   protected void b(dh paramdh)
/*      */   {
/*  986 */     super.b(paramdh);
/*  987 */     this.a = paramdh.f("Type");
/*      */   }
/*      */   
/*      */ 
/*      */   public void a(avk paramavk, List paramList, Random paramRandom)
/*      */   {
/*  993 */     a((auz)paramavk, paramList, paramRandom, 4, 1);
/*  994 */     b((auz)paramavk, paramList, paramRandom, 1, 4);
/*  995 */     c((auz)paramavk, paramList, paramRandom, 1, 4);
/*      */   }
/*      */   
/*      */ 
/*      */   public static auv a(List paramList, Random paramRandom, int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
/*      */   {
/* 1001 */     asv localasv = asv.a(paramInt1, paramInt2, paramInt3, -4, -1, 0, 11, 7, 11, paramInt4);
/*      */     
/* 1003 */     if ((!a(localasv)) || (avk.a(paramList, localasv) != null)) {
/* 1004 */       return null;
/*      */     }
/*      */     
/* 1007 */     return new auv(paramInt5, paramRandom, localasv, paramInt4);
/*      */   }
/*      */   
/*      */   public boolean a(ahb paramahb, Random paramRandom, asv paramasv)
/*      */   {
/* 1012 */     if (a(paramahb, paramasv)) {
/* 1013 */       return false;
/*      */     }
/*      */     
/*      */ 
/* 1017 */     a(paramahb, paramasv, 0, 0, 0, 10, 6, 10, true, paramRandom, aui.c());
/*      */     
/* 1019 */     a(paramahb, paramRandom, paramasv, this.d, 4, 1, 0);
/*      */     
/* 1021 */     a(paramahb, paramasv, 4, 1, 10, 6, 3, 10, ajn.a, ajn.a, false);
/* 1022 */     a(paramahb, paramasv, 0, 1, 4, 0, 3, 6, ajn.a, ajn.a, false);
/* 1023 */     a(paramahb, paramasv, 10, 1, 4, 10, 3, 6, ajn.a, ajn.a, false);
/*      */     int i;
/* 1025 */     switch (this.a)
/*      */     {
/*      */     default: 
/*      */       break;
/*      */     case 0: 
/* 1030 */       a(paramahb, ajn.aV, 0, 5, 1, 5, paramasv);
/* 1031 */       a(paramahb, ajn.aV, 0, 5, 2, 5, paramasv);
/* 1032 */       a(paramahb, ajn.aV, 0, 5, 3, 5, paramasv);
/* 1033 */       a(paramahb, ajn.aa, 0, 4, 3, 5, paramasv);
/* 1034 */       a(paramahb, ajn.aa, 0, 6, 3, 5, paramasv);
/* 1035 */       a(paramahb, ajn.aa, 0, 5, 3, 4, paramasv);
/* 1036 */       a(paramahb, ajn.aa, 0, 5, 3, 6, paramasv);
/* 1037 */       a(paramahb, ajn.U, 0, 4, 1, 4, paramasv);
/* 1038 */       a(paramahb, ajn.U, 0, 4, 1, 5, paramasv);
/* 1039 */       a(paramahb, ajn.U, 0, 4, 1, 6, paramasv);
/* 1040 */       a(paramahb, ajn.U, 0, 6, 1, 4, paramasv);
/* 1041 */       a(paramahb, ajn.U, 0, 6, 1, 5, paramasv);
/* 1042 */       a(paramahb, ajn.U, 0, 6, 1, 6, paramasv);
/* 1043 */       a(paramahb, ajn.U, 0, 5, 1, 4, paramasv);
/* 1044 */       a(paramahb, ajn.U, 0, 5, 1, 6, paramasv);
/* 1045 */       break;
/*      */     case 1: 
/* 1047 */       for (i = 0; i < 5; i++) {
/* 1048 */         a(paramahb, ajn.aV, 0, 3, 1, 3 + i, paramasv);
/* 1049 */         a(paramahb, ajn.aV, 0, 7, 1, 3 + i, paramasv);
/* 1050 */         a(paramahb, ajn.aV, 0, 3 + i, 1, 3, paramasv);
/* 1051 */         a(paramahb, ajn.aV, 0, 3 + i, 1, 7, paramasv);
/*      */       }
/* 1053 */       a(paramahb, ajn.aV, 0, 5, 1, 5, paramasv);
/* 1054 */       a(paramahb, ajn.aV, 0, 5, 2, 5, paramasv);
/* 1055 */       a(paramahb, ajn.aV, 0, 5, 3, 5, paramasv);
/* 1056 */       a(paramahb, ajn.i, 0, 5, 4, 5, paramasv);
/* 1057 */       break;
/*      */     case 2: 
/* 1059 */       for (i = 1; i <= 9; i++) {
/* 1060 */         a(paramahb, ajn.e, 0, 1, 3, i, paramasv);
/* 1061 */         a(paramahb, ajn.e, 0, 9, 3, i, paramasv);
/*      */       }
/* 1063 */       for (i = 1; i <= 9; i++) {
/* 1064 */         a(paramahb, ajn.e, 0, i, 3, 1, paramasv);
/* 1065 */         a(paramahb, ajn.e, 0, i, 3, 9, paramasv);
/*      */       }
/* 1067 */       a(paramahb, ajn.e, 0, 5, 1, 4, paramasv);
/* 1068 */       a(paramahb, ajn.e, 0, 5, 1, 6, paramasv);
/* 1069 */       a(paramahb, ajn.e, 0, 5, 3, 4, paramasv);
/* 1070 */       a(paramahb, ajn.e, 0, 5, 3, 6, paramasv);
/* 1071 */       a(paramahb, ajn.e, 0, 4, 1, 5, paramasv);
/* 1072 */       a(paramahb, ajn.e, 0, 6, 1, 5, paramasv);
/* 1073 */       a(paramahb, ajn.e, 0, 4, 3, 5, paramasv);
/* 1074 */       a(paramahb, ajn.e, 0, 6, 3, 5, paramasv);
/* 1075 */       for (i = 1; i <= 3; i++) {
/* 1076 */         a(paramahb, ajn.e, 0, 4, i, 4, paramasv);
/* 1077 */         a(paramahb, ajn.e, 0, 6, i, 4, paramasv);
/* 1078 */         a(paramahb, ajn.e, 0, 4, i, 6, paramasv);
/* 1079 */         a(paramahb, ajn.e, 0, 6, i, 6, paramasv);
/*      */       }
/* 1081 */       a(paramahb, ajn.aa, 0, 5, 3, 5, paramasv);
/* 1082 */       for (i = 2; i <= 8; i++) {
/* 1083 */         a(paramahb, ajn.f, 0, 2, 3, i, paramasv);
/* 1084 */         a(paramahb, ajn.f, 0, 3, 3, i, paramasv);
/* 1085 */         if ((i <= 3) || (i >= 7)) {
/* 1086 */           a(paramahb, ajn.f, 0, 4, 3, i, paramasv);
/* 1087 */           a(paramahb, ajn.f, 0, 5, 3, i, paramasv);
/* 1088 */           a(paramahb, ajn.f, 0, 6, 3, i, paramasv);
/*      */         }
/* 1090 */         a(paramahb, ajn.f, 0, 7, 3, i, paramasv);
/* 1091 */         a(paramahb, ajn.f, 0, 8, 3, i, paramasv);
/*      */       }
/* 1093 */       a(paramahb, ajn.ap, a(ajn.ap, 4), 9, 1, 3, paramasv);
/* 1094 */       a(paramahb, ajn.ap, a(ajn.ap, 4), 9, 2, 3, paramasv);
/* 1095 */       a(paramahb, ajn.ap, a(ajn.ap, 4), 9, 3, 3, paramasv);
/*      */       
/* 1097 */       a(paramahb, paramasv, paramRandom, 3, 4, 8, qx.a(b, new qx[] { ade.bR.b(paramRandom) }), 1 + paramRandom.nextInt(4));
/*      */     }
/*      */     
/*      */     
/* 1101 */     return true;
/*      */   }
/*      */ }


/* Location:              C:\Users\trent\.gradle\caches\minecraft\net\minecraft\minecraft\1.7.10\minecraft-1.7.10.jar!\auv.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */